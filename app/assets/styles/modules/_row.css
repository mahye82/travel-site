.row {
  @mixin clearfix;

  &--t-padding {
    padding-top: 80px;
  }

  &--gutters {
    margin-right: -65px;
  }

  &--gutters-large {
    margin-right: -100px;
  }

  &--gutters-small {
    margin-right: -45px;
  }

  &--gutters > div {
    padding-right: 65px;
  }

  &--gutters-large > div {
    padding-right: 100px;
  }

  &--gutters-small > div {
    padding-right: 45px;
  }

  &__b-margin-until-medium {
    margin-bottom: 1rem;
  }

  @mixin atMedium {
    &__b-margin-until-medium {
      margin-bottom: 0;
    }

    &__medium-4 {
      float: left;
      width: 33.33%;
    }

    &__medium-4--larger {
      width: 37%;
    }

    &__medium-6 {
      float: left;
      width: 50%;
    }

    &__medium-8 {
      float: left;
      width: 66.66%;
    }

    &__medium-8--smaller {
      width: 63%;
    }
  }

  @mixin atLarge {
    &__b-margin-until-large {
      margin-bottom: 0;
    }

    &__large-4 {
      float: left;
      width: 33.33%;
    }

    &__large-4--larger {
      width: 37%;
    }

    &__large-6 {
      float: left;
      width: 50%;
    }

    &__large-8 {
      float: left;
      width: 66.66%;
    }

    &__large-8--smaller {
      width: 63%;
    }
  }

  /*
    Equal height rules.

    NOTE:
    .flexbox is a class that would be added by modernizr.js. modernizr.js will check to see if the browser supports
    flexbox, and if so, it will add the .flexbox class to the main <html> element. If the browser doesn't support
    flexbox, the .no-flexbox class gets added to the <html> element instead. This allows us to provide CSS that
    supports different types of browser.
  */

  .flexbox &--equal-height-at-medium {
    @mixin atMedium {
      display: flex;
    }

    & > div {
      float: none;
      display: flex;
    }
  }

  .flexbox &--equal-height-at-large {
    @mixin atLarge {
      display: flex;
    }

    & > div {
      float: none;
      display: flex;
    }
  }

}